{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FetchInterceptor = void 0;\n\nvar headers_polyfill_1 = require(\"headers-polyfill\");\n\nvar outvariant_1 = require(\"outvariant\");\n\nvar IsomorphicRequest_1 = require(\"../../IsomorphicRequest\");\n\nvar glossary_1 = require(\"../../glossary\");\n\nvar Interceptor_1 = require(\"../../Interceptor\");\n\nvar toIsoResponse_1 = require(\"../../utils/toIsoResponse\");\n\nvar InteractiveIsomorphicRequest_1 = require(\"../../InteractiveIsomorphicRequest\");\n\nvar FetchInterceptor =\n/** @class */\nfunction (_super) {\n  __extends(FetchInterceptor, _super);\n\n  function FetchInterceptor() {\n    return _super.call(this, FetchInterceptor.symbol) || this;\n  }\n\n  FetchInterceptor.prototype.checkEnvironment = function () {\n    return typeof globalThis !== 'undefined' && typeof globalThis.fetch !== 'undefined';\n  };\n\n  FetchInterceptor.prototype.setup = function () {\n    var _this = this;\n\n    var pureFetch = globalThis.fetch;\n    outvariant_1.invariant(!pureFetch[glossary_1.IS_PATCHED_MODULE], 'Failed to patch the \"fetch\" module: already patched.');\n\n    globalThis.fetch = function (input, init) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var request, url, method, body, isomorphicRequest, interactiveIsomorphicRequest, _a, mockedResponse, isomorphicResponse, response;\n\n        var _this = this;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              request = new Request(input, init);\n              url = typeof input === 'string' ? input : input.url;\n              method = request.method;\n              this.log('[%s] %s', method, url);\n              return [4\n              /*yield*/\n              , request.clone().arrayBuffer()];\n\n            case 1:\n              body = _b.sent();\n              isomorphicRequest = new IsomorphicRequest_1.IsomorphicRequest(new URL(url, location.origin), {\n                body: body,\n                method: method,\n                headers: new headers_polyfill_1.Headers(request.headers),\n                credentials: request.credentials\n              });\n              interactiveIsomorphicRequest = new InteractiveIsomorphicRequest_1.InteractiveIsomorphicRequest(isomorphicRequest);\n              this.log('isomorphic request', interactiveIsomorphicRequest);\n              this.log('emitting the \"request\" event for %d listener(s)...', this.emitter.listenerCount('request'));\n              this.emitter.emit('request', interactiveIsomorphicRequest);\n              this.log('awaiting for the mocked response...');\n              return [4\n              /*yield*/\n              , this.emitter.untilIdle('request', function (_a) {\n                var _b = __read(_a.args, 1),\n                    request = _b[0];\n\n                return request.id === interactiveIsomorphicRequest.id;\n              })];\n\n            case 2:\n              _b.sent();\n\n              this.log('all request listeners have been resolved!');\n              return [4\n              /*yield*/\n              , interactiveIsomorphicRequest.respondWith.invoked()];\n\n            case 3:\n              _a = __read.apply(void 0, [_b.sent(), 1]), mockedResponse = _a[0];\n              this.log('event.respondWith called with:', mockedResponse);\n\n              if (mockedResponse) {\n                this.log('received mocked response:', mockedResponse);\n                isomorphicResponse = toIsoResponse_1.toIsoResponse(mockedResponse);\n                this.log('derived isomorphic response:', isomorphicResponse);\n                this.emitter.emit('response', interactiveIsomorphicRequest, isomorphicResponse);\n                response = new Response(mockedResponse.body, __assign(__assign({}, isomorphicResponse), {\n                  // `Response.headers` cannot be instantiated with the `Headers` polyfill.\n                  // Apparently, it halts if the `Headers` class contains unknown properties\n                  // (i.e. the internal `Headers.map`).\n                  headers: headers_polyfill_1.flattenHeadersObject(mockedResponse.headers || {})\n                })); // Set the \"response.url\" property to equal the intercepted request URL.\n\n                Object.defineProperty(response, 'url', {\n                  writable: false,\n                  enumerable: true,\n                  configurable: false,\n                  value: interactiveIsomorphicRequest.url.href\n                });\n                return [2\n                /*return*/\n                , response];\n              }\n\n              this.log('no mocked response received!');\n              return [2\n              /*return*/\n              , pureFetch(request).then(function (response) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var cloneResponse, _a, _b, _c;\n\n                  return __generator(this, function (_d) {\n                    switch (_d.label) {\n                      case 0:\n                        cloneResponse = response.clone();\n                        this.log('original fetch performed', cloneResponse);\n                        _b = (_a = this.emitter).emit;\n                        _c = ['response', interactiveIsomorphicRequest];\n                        return [4\n                        /*yield*/\n                        , normalizeFetchResponse(cloneResponse)];\n\n                      case 1:\n                        _b.apply(_a, _c.concat([_d.sent()]));\n\n                        return [2\n                        /*return*/\n                        , response];\n                    }\n                  });\n                });\n              })];\n          }\n        });\n      });\n    };\n\n    Object.defineProperty(globalThis.fetch, glossary_1.IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(function () {\n      Object.defineProperty(globalThis.fetch, glossary_1.IS_PATCHED_MODULE, {\n        value: undefined\n      });\n      globalThis.fetch = pureFetch;\n\n      _this.log('restored native \"globalThis.fetch\"!', globalThis.fetch.name);\n    });\n  };\n\n  FetchInterceptor.symbol = Symbol('fetch');\n  return FetchInterceptor;\n}(Interceptor_1.Interceptor);\n\nexports.FetchInterceptor = FetchInterceptor;\n\nfunction normalizeFetchResponse(response) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _a = {\n            status: response.status,\n            statusText: response.statusText,\n            headers: headers_polyfill_1.objectToHeaders(headers_polyfill_1.headersToObject(response.headers))\n          };\n          return [4\n          /*yield*/\n          , response.text()];\n\n        case 1:\n          return [2\n          /*return*/\n          , (_a.body = _b.sent(), _a)];\n      }\n    });\n  });\n}","map":{"version":3,"mappings":"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","names":["__extends","_super","FetchInterceptor","symbol","globalThis","fetch","pureFetch","outvariant_1","glossary_1","input","init","request","Request","url","method","log","clone","arrayBuffer","body","_b","isomorphicRequest","IsomorphicRequest_1","URL","location","origin","headers","headers_polyfill_1","credentials","interactiveIsomorphicRequest","InteractiveIsomorphicRequest_1","emitter","listenerCount","emit","untilIdle","_a","id","respondWith","invoked","mockedResponse","isomorphicResponse","toIsoResponse_1","response","Response","__assign","Object","defineProperty","writable","enumerable","configurable","value","href","then","cloneResponse","normalizeFetchResponse","_d","subscriptions","push","undefined","_this","name","Symbol","Interceptor_1","exports","status","statusText","text"],"sources":["C:\\Users\\nawue\\OneDrive\\Desktop\\exm\\frontend\\fe3-final\\fe3-final-main\\node_modules\\@mswjs\\interceptors\\src\\interceptors\\fetch\\index.ts"],"sourcesContent":["import {\n  Headers,\n  flattenHeadersObject,\n  objectToHeaders,\n  headersToObject,\n} from 'headers-polyfill'\nimport { invariant } from 'outvariant'\nimport { IsomorphicRequest } from '../../IsomorphicRequest'\nimport {\n  HttpRequestEventMap,\n  IsomorphicResponse,\n  IS_PATCHED_MODULE,\n} from '../../glossary'\nimport { Interceptor } from '../../Interceptor'\nimport { toIsoResponse } from '../../utils/toIsoResponse'\nimport { InteractiveIsomorphicRequest } from '../../InteractiveIsomorphicRequest'\n\nexport class FetchInterceptor extends Interceptor<HttpRequestEventMap> {\n  static symbol = Symbol('fetch')\n\n  constructor() {\n    super(FetchInterceptor.symbol)\n  }\n\n  protected checkEnvironment() {\n    return (\n      typeof globalThis !== 'undefined' &&\n      typeof globalThis.fetch !== 'undefined'\n    )\n  }\n\n  protected setup() {\n    const pureFetch = globalThis.fetch\n\n    invariant(\n      !(pureFetch as any)[IS_PATCHED_MODULE],\n      'Failed to patch the \"fetch\" module: already patched.'\n    )\n\n    globalThis.fetch = async (input, init) => {\n      const request = new Request(input, init)\n\n      const url = typeof input === 'string' ? input : input.url\n      const method = request.method\n\n      this.log('[%s] %s', method, url)\n\n      const body = await request.clone().arrayBuffer()\n      const isomorphicRequest = new IsomorphicRequest(\n        new URL(url, location.origin),\n        {\n          body,\n          method,\n          headers: new Headers(request.headers),\n          credentials: request.credentials,\n        }\n      )\n\n      const interactiveIsomorphicRequest = new InteractiveIsomorphicRequest(\n        isomorphicRequest\n      )\n\n      this.log('isomorphic request', interactiveIsomorphicRequest)\n\n      this.log(\n        'emitting the \"request\" event for %d listener(s)...',\n        this.emitter.listenerCount('request')\n      )\n      this.emitter.emit('request', interactiveIsomorphicRequest)\n\n      this.log('awaiting for the mocked response...')\n\n      await this.emitter.untilIdle('request', ({ args: [request] }) => {\n        return request.id === interactiveIsomorphicRequest.id\n      })\n      this.log('all request listeners have been resolved!')\n\n      const [mockedResponse] =\n        await interactiveIsomorphicRequest.respondWith.invoked()\n      this.log('event.respondWith called with:', mockedResponse)\n\n      if (mockedResponse) {\n        this.log('received mocked response:', mockedResponse)\n\n        const isomorphicResponse = toIsoResponse(mockedResponse)\n        this.log('derived isomorphic response:', isomorphicResponse)\n\n        this.emitter.emit(\n          'response',\n          interactiveIsomorphicRequest,\n          isomorphicResponse\n        )\n\n        const response = new Response(mockedResponse.body, {\n          ...isomorphicResponse,\n          // `Response.headers` cannot be instantiated with the `Headers` polyfill.\n          // Apparently, it halts if the `Headers` class contains unknown properties\n          // (i.e. the internal `Headers.map`).\n          headers: flattenHeadersObject(mockedResponse.headers || {}),\n        })\n\n        // Set the \"response.url\" property to equal the intercepted request URL.\n        Object.defineProperty(response, 'url', {\n          writable: false,\n          enumerable: true,\n          configurable: false,\n          value: interactiveIsomorphicRequest.url.href,\n        })\n\n        return response\n      }\n\n      this.log('no mocked response received!')\n\n      return pureFetch(request).then(async (response) => {\n        const cloneResponse = response.clone()\n        this.log('original fetch performed', cloneResponse)\n\n        this.emitter.emit(\n          'response',\n          interactiveIsomorphicRequest,\n          await normalizeFetchResponse(cloneResponse)\n        )\n        return response\n      })\n    }\n\n    Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true,\n    })\n\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n        value: undefined,\n      })\n\n      globalThis.fetch = pureFetch\n\n      this.log('restored native \"globalThis.fetch\"!', globalThis.fetch.name)\n    })\n  }\n}\n\nasync function normalizeFetchResponse(\n  response: Response\n): Promise<IsomorphicResponse> {\n  return {\n    status: response.status,\n    statusText: response.statusText,\n    headers: objectToHeaders(headersToObject(response.headers)),\n    body: await response.text(),\n  }\n}\n"]},"metadata":{},"sourceType":"script"}