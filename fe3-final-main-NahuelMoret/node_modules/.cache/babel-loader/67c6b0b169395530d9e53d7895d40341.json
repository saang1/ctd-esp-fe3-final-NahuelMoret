{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nawue\\\\OneDrive\\\\Desktop\\\\exm\\\\frontend\\\\fe3-final\\\\fe3-final-main\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useMemo, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: localStorage.getItem(\"theme\") || \"light\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [theme, setTheme] = useState(initialState.theme);\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === \"light\" ? \"dark\" : \"light\");\n  }; // Save theme to localStorage whenever it changes\n\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n  const contextValue = useMemo(() => {\n    return {\n      state: {\n        theme,\n        data: []\n      },\n      actions: {\n        toggleTheme\n      }\n    };\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"VaYwpWn2iYQWWrZ30CAcO9Qzq/I=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useMemo","useState","useEffect","initialState","theme","localStorage","getItem","data","ContextGlobal","undefined","ContextProvider","children","setTheme","toggleTheme","prevTheme","setItem","contextValue","state","actions"],"sources":["C:/Users/nawue/OneDrive/Desktop/exm/frontend/fe3-final/fe3-final-main/src/Components/utils/global.context.jsx"],"sourcesContent":["\nimport { createContext, useMemo, useState, useEffect } from \"react\";\n\nexport const initialState = {\n  theme: localStorage.getItem(\"theme\") || \"light\",\n  data: [],\n};\n\nexport const ContextGlobal = createContext(undefined);\n\nexport const ContextProvider = ({ children }) => {\n  const [theme, setTheme] = useState(initialState.theme);\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\n  };\n\n  // Save theme to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  const contextValue = useMemo(() => {\n    return {\n      state: { theme, data: [] },\n      actions: { toggleTheme },\n    };\n  }, [theme]);\n\n  return (\n    <ContextGlobal.Provider value={contextValue}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};"],"mappings":";;;AACA,SAASA,aAAT,EAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,SAA3C,QAA4D,OAA5D;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,OADd;EAE1BC,IAAI,EAAE;AAFoB,CAArB;AAKP,OAAO,MAAMC,aAAa,gBAAGT,aAAa,CAACU,SAAD,CAAnC;AAEP,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C,MAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBX,QAAQ,CAACE,YAAY,CAACC,KAAd,CAAlC;;EAEA,MAAMS,WAAW,GAAG,MAAM;IACxBD,QAAQ,CAAEE,SAAD,IAAgBA,SAAS,KAAK,OAAd,GAAwB,MAAxB,GAAiC,OAAlD,CAAR;EACD,CAFD,CAH+C,CAO/C;;;EACAZ,SAAS,CAAC,MAAM;IACdG,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BX,KAA9B;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;EAIA,MAAMY,YAAY,GAAGhB,OAAO,CAAC,MAAM;IACjC,OAAO;MACLiB,KAAK,EAAE;QAAEb,KAAF;QAASG,IAAI,EAAE;MAAf,CADF;MAELW,OAAO,EAAE;QAAEL;MAAF;IAFJ,CAAP;EAID,CAL2B,EAKzB,CAACT,KAAD,CALyB,CAA5B;EAOA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEY,YAA/B;IAAA,UACGL;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAxBM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}