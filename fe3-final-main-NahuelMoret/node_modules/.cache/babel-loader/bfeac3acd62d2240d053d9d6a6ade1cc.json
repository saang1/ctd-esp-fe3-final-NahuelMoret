{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nawue\\\\OneDrive\\\\Desktop\\\\exm\\\\frontend\\\\fe3-final\\\\fe3-final-main\\\\src\\\\Routes\\\\Favs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { ContextGlobal } from \"../Components/utils/global.context\"; //Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Favs = () => {\n  _s();\n\n  const {\n    state\n  } = useContext(ContextGlobal) || {};\n  const [favoriteCards, setFavoriteCards] = useState([]);\n  useEffect(() => {\n    const favorites = JSON.parse(localStorage.getItem(\"favorites\") || \"[]\");\n    setFavoriteCards(favorites);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: (state === null || state === void 0 ? void 0 : state.theme) === 'dark' ? 'dark-mode' : '',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dentists Favs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Favs, \"+Y+KcV7W10bKEFC90Rf7oeIC1pc=\");\n\n_c = Favs;\nexport default Favs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favs\");","map":{"version":3,"names":["React","useContext","ContextGlobal","Favs","state","favoriteCards","setFavoriteCards","useState","useEffect","favorites","JSON","parse","localStorage","getItem","theme"],"sources":["C:/Users/nawue/OneDrive/Desktop/exm/frontend/fe3-final/fe3-final-main/src/Routes/Favs.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { ContextGlobal } from \"../Components/utils/global.context\";\n\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nconst Favs = () => {\n\n  const { state } = useContext(ContextGlobal) || {};\n\n  const [favoriteCards, setFavoriteCards] = useState([]);\n\n  useEffect(() => {\n    const favorites = JSON.parse(localStorage.getItem(\"favorites\") || \"[]\");\n    setFavoriteCards(favorites);\n  }, []);\n\n\n  return (\n    <div className={state?.theme === 'dark' ? 'dark-mode' : ''}>\n\n      <h1>Dentists Favs</h1>\n      <div className=\"card-grid\">\n        {/* este componente debe consumir los destacados del localStorage */}\n        {/* Deberan renderizar una Card por cada uno de ellos */}\n        \n      </div>\n    </div>\n  );\n};\n\nexport default Favs;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,oCAA9B,C,CAEA;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEjB,MAAM;IAAEC;EAAF,IAAYH,UAAU,CAACC,aAAD,CAAV,IAA6B,EAA/C;EAEA,MAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCC,QAAQ,CAAC,EAAD,CAAlD;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqC,IAAhD,CAAlB;IACAP,gBAAgB,CAACG,SAAD,CAAhB;EACD,CAHQ,EAGN,EAHM,CAAT;EAMA,oBACE;IAAK,SAAS,EAAE,CAAAL,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEU,KAAP,MAAiB,MAAjB,GAA0B,WAA1B,GAAwC,EAAxD;IAAA,wBAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAvBD;;GAAMX,I;;KAAAA,I;AAyBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}